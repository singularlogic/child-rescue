# Generated by Django 2.1.5 on 2019-02-11 12:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude_of_disappearance', models.FloatField()),
                ('longitude_of_disappearance', models.FloatField()),
                ('disappearance_date', models.DateTimeField(blank=True, null=True)),
                ('found_date', models.DateTimeField(blank=True, null=True)),
                ('conditions_of_disappearance', models.CharField(max_length=5000)),
                ('reasons_of_disappearance', models.CharField(max_length=5000)),
                ('child_state', models.CharField(blank=True, choices=[('abused', 'Abused'), ('shocked', 'Shocked'), ('normal', 'Normal'), ('dead', 'Dead'), ('wounded', 'Wounded')], max_length=20, null=True)),
                ('has_mobile_phone', models.BooleanField(default=False)),
                ('has_money_or_credit', models.BooleanField(default=False)),
                ('has_area_knowledge', models.BooleanField(default=False)),
                ('rescue_teams_utilized', models.BooleanField(default=False)),
                ('volunteers_utilized', models.BooleanField(default=False)),
                ('transit_country', models.CharField(max_length=1000)),
                ('arrival_at_facility_date', models.DateTimeField(blank=True, null=True)),
                ('disappearance_type', models.CharField(blank=True, choices=[('runaway', 'Runaway'), ('parental', 'Parental'), ('abduction', 'Abduction'), ('criminal', 'Criminal'), ('missing', 'Missing'), ('minor', 'Minor'), ('tracing', 'Tracing'), ('request', 'Request'), ('unclear', 'Unclear')], max_length=20, null=True)),
                ('multi_times_case', models.IntegerField()),
                ('family_members', models.IntegerField()),
                ('probable_destinations', models.CharField(max_length=5000)),
                ('clothing_with_scent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('mother_name', models.CharField(max_length=50)),
                ('father_name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('mobile', models.CharField(max_length=15)),
                ('mobile_mother', models.CharField(max_length=15)),
                ('mobile_father', models.CharField(max_length=15)),
                ('eye_color', models.CharField(max_length=50)),
                ('hair_color', models.CharField(max_length=50)),
                ('skin_color', models.CharField(max_length=50)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('height', models.CharField(max_length=50)),
                ('stature', models.CharField(blank=True, choices=[('tall', 'Tall'), ('short', 'Short'), ('normal', 'Normal')], max_length=20, null=True)),
                ('body_type', models.CharField(blank=True, choices=[('fat', 'Fat'), ('slim', 'Slim'), ('normal', 'Normal')], max_length=20, null=True)),
                ('characteristics', models.CharField(max_length=5000)),
                ('facebook', models.CharField(max_length=256)),
            ],
        ),
    ]
